{
    /* 是否启用该币该矿池 */
    "enabled": false,
    "coin": "litecoin.json",

    "address": "n4jSe18kZMCdGcZqaYprShXW6EH1wivUK1", //币钱包地址

/* Block rewards go to the configured pool wallet address to later be paid out to miners,
       except for a percentages that can go to pool operator(s) as pool fees or donations.
       Addresses or hashed public keys can be used. */
/* 块奖励去配置的池钱包地址后支付给矿工，
        除了一个百分比可以去游泳池运算符（ s）表示，由于池费或捐款。
      地址或散列公钥都可以使用。 */
    "rewardRecipients": {
        "n37vuNFkXfk15uFnGoVyHZ6PYQxppD3QqK": 1.5, //1.5% goes to pool op1.5 ％变为集中运
        "22851477d63a085dbc2398c8430af1c09e7343f6": 0.1 //0.1% donation to NOMP to help support development 捐赠给NOMP帮助支持发展
    },

    /* 支付进程 */
    "paymentProcessing": {
        "enabled": true,
        "paymentInterval": 20,
        "minimumPayment": 70,
        "daemon": {
            "host": "127.0.0.1",
            "port": 19332,
            "user": "testuser",
            "password": "testpass"
        }
    },

    /* Each pool can have as many ports for your miners to connect to as you wish. Each port can
       be configured to use its own pool difficulty and variable difficulty settings. varDiff is
       optional and will only be used for the ports you configure it for. */
/* 每个池可以有多个端口为您的矿工连接到如你所愿。每个端口可以被配置为使用自己的游泳池难度和变数难度设置。VARDIFF是可选的，将只用于配置它的端口。 */
/* 注意：这里是可以只保留一个端口的，并不是一定需要三个或者之类 */
/* X11：默认难度0.0019532 对应MPOS 约等于7如果要用整数就是MPOS 8 正好对应 0.004 */
/* X11 如果单一个算法，那么其他端口可以删除掉，但是必须存在最大最小难度否则挖不到块！！！如范例
"ports": {
        "3393": {
            "diff": 0.001,//0.001
            "varDiff": {
                "minDiff": 0.00116,//0.008
                "maxDiff": 0.08,
                "targetTime": 15,
                "retargetTime": 120,//90 120
                "variancePercent": 30
            }
        }
    },
*/

/* S：默认难度16 */
    "ports": {
        "3008": { //默认挖矿端口A端口，是下面那个难度
            "diff": 8
        },
        "3032": { //A port for your miners to connect to A端口的矿工连接到
            "diff": 32, //the pool difficulty for this port 该矿池端口难度
/* Variable difficulty is a feature that will automatically adjust difficulty for individual miners based on their hashrate in order to lower networking overhead */
 /* 变量的难度是一项功能，会自动调整难度基于其哈希率以降低网络开销个别矿工 */
            "varDiff": {
                "minDiff": 8, //Minimum difficulty最小难度
                "maxDiff": 512, //Network difficulty will be used if it is lower than this 网络难度会如果它低于此使用
                "targetTime": 15, //Try to get 1 share per this many seconds试着让每多少秒1股
                "retargetTime": 90, //Check to see if we should retarget every this many seconds 检查我们是否应该重新定位每隔多少秒
                "variancePercent": 30 //Allow time to very this % from target without retargeting 允许时间极本％的目标没有重定向
            }
        },
        "3256": { //Another port for your miners to connect to, this port does not use varDiff 另外一个端口，您的矿工要连接到该端口不使用VARDIFF
            "diff": 256 //The pool difficulty 池难度
        }
    },

    /* Recommended to have at least two daemon instances running in case one drops out-of-sync or offline. For redundancy, all instances will be polled for block/transaction updates and be used for submitting blocks. Creating a backup daemon involves spawning a daemon  using the "-datadir=/backup" argument which creates a new daemon instance with it's own  RPC config. For more info on this see: - https://en.bitcoin.it/wiki/Data_directory - https://en.bitcoin.it/wiki/Running_bitcoind */
/* 推荐有在运行的情况下，至少有两个守护进程实例1滴出不同步或脱机。为了实现冗余，所有的实例都将被轮询块/事务更新和用于提交块。创建备份精灵涉及生成一个守护进程使用“- DATADIR = /备份”参数，它与它自己创建一个新的守护进程实例RPC配置。关于此查看更多资讯：
           - https://en.bitcoin.it/wiki/Data_directory
           - https://en.bitcoin.it/wiki/Running_bitcoind * /
    "daemons": [//Main daemon instance主守护进程实例
        {
            "host": "127.0.0.1",
            "port": 19332,
            "user": "testuser",
            "password": "testpass"
        }
    ],

    /* This allows the pool to connect to the daemon as a node peer to receive block updates.
       It may be the most efficient way to get block updates (faster than polling, less
       intensive than blocknotify script). It requires the additional field "peerMagic" in
       the coin config. */
/* 这使得池连接到后台程序作为节点对接收模块的更新。它可能是最有效的方式来获得块的更新（不是轮询更快，更密集的比blocknotify脚本）。这需要在附加字段“ peerMagic ”硬币的配置。 */
    "p2p": {
        "enabled": true,
        /* Host for daemon 主机的守护进程IP */
        "host": "127.0.0.1",
        /* Port configured for daemon (this is the actual peer port not RPC port) 端口配置的守护进程（这是实际的对等端口不是RPC端口） */
        "port": 19333,
        /* If your coin daemon is new enough (i.e. not a shitcoin) then it will support a p2p
           feature that prevents the daemon from spamming our peer node with unnecessary
           transaction data. Assume its supported but if you have problems try disabling it. */
        /* 如果你的硬币守护程序是足够新（即不是shitcoin ），那么它会支持一个p2p功能，防止守护进程滥用我们的对等节点不必要的交易数据。假设它的支持，但如果你有问题尝试禁用它。 */
        "disableTransactions": true
    },
/* 是否开启MPOS前端，如果开了，那么WEB前端就要禁止了 */
    "mposMode": {
        "enabled": false,
        "host": "127.0.0.1",
        "port": 3306,
        "user": "me",
        "password": "mypass",
        "database": "ltc",
        "checkPassword": true,
        "autoCreateWorker": false
    }

}
